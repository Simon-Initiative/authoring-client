// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_boolean = require("bs-platform/lib/js/js_boolean.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Option$CourseEditor = require("../../../utils/reason/Option.bs.js");
var ReactUtils$CourseEditor = require("../../../utils/reason/ReactUtils.bs.js");
var StyleUtils$CourseEditor = require("../../../styles/reason/StyleUtils.bs.js");
var NumericMatchOptionsStyle = require("./NumericMatchOptions.style");

var componentName = "NumericMatchOptions";

var component = ReasonReact.statelessComponent(componentName);

function make(classes, className, editMode, responseId, match_, onEditMatch) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", {
                  className: StyleUtils$CourseEditor.classNames(/* :: */[
                        componentName,
                        /* :: */[
                          StyleUtils$CourseEditor.jssClass(classes, componentName),
                          /* :: */[
                            Option$CourseEditor.valueOr(className, ""),
                            /* [] */0
                          ]
                        ]
                      ])
                }, React.createElement("div", {
                      className: StyleUtils$CourseEditor.jssClass(classes, "condition")
                    }, React.createElement("select", {
                          className: "form-control-sm custom-select mb-2 mr-sm-2 mb-sm-0"
                        }, React.createElement("option", {
                              value: "eq"
                            }, ReactUtils$CourseEditor.strEl("Equal to")), React.createElement("option", {
                              value: "ne"
                            }, ReactUtils$CourseEditor.strEl("Not Equal to")), React.createElement("option", {
                              value: "gt"
                            }, ReactUtils$CourseEditor.strEl("Greater than")), React.createElement("option", {
                              value: "lt"
                            }, ReactUtils$CourseEditor.strEl("Less than")), React.createElement("option", {
                              value: "gteq"
                            }, ReactUtils$CourseEditor.strEl("Greater than Equal to")), React.createElement("option", {
                              value: "lteq"
                            }, ReactUtils$CourseEditor.strEl("Less than Equal to")), React.createElement("option", {
                              value: "precision"
                            }, ReactUtils$CourseEditor.strEl("Precision")), React.createElement("option", {
                              value: "range"
                            }, ReactUtils$CourseEditor.strEl("Range")))), React.createElement("div", {
                      className: StyleUtils$CourseEditor.jssClass(classes, "value")
                    }, React.createElement("input", {
                          className: "form-control input-sm form-control-sm",
                          disabled: Js_boolean.to_js_boolean(1 - editMode),
                          value: match_,
                          onChange: (function ($$event) {
                              return Curry._2(onEditMatch, responseId, $$event.target.value);
                            })
                        })));
    });
  return newrecord;
}

var jsComponentUnstyled = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.classes, Js_primitive.null_undefined_to_opt(jsProps.className), jsProps.editMode, jsProps.responseId, jsProps.match_, jsProps.onEditMatch);
      }));

var jsComponent = StyleUtils$CourseEditor.injectSheet(NumericMatchOptionsStyle.styles, jsComponentUnstyled);

exports.componentName = componentName;
exports.component = component;
exports.make = make;
exports.jsComponentUnstyled = jsComponentUnstyled;
exports.jsComponent = jsComponent;
/* component Not a pure module */
